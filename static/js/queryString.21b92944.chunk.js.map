{"version":3,"file":"static/js/queryString.21b92944.chunk.js","mappings":"mHAcM,SAAUA,EACdC,GAEA,MACqE,WAAnEC,OAAOC,UAAUC,SAASC,KAAKJ,GAAKK,MAAM,GAAI,GAAGC,c,wDCV/C,SAAUC,EACdC,EACAC,GAEA,OAAOR,OAAOS,KAAKD,GAAQE,QAAO,SAACC,EAAwBC,GACrDA,EAAIC,WAAWN,KAEjBI,EADcC,EAAIE,OAAOP,EAAOQ,SACnBP,EAAOI,IAEtB,OAAOD,IACN,I,2ECRC,SAAUK,EACdC,EACAC,GAEA,IAAMC,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOJ,EACT,IACMK,EADSJ,EAAEK,OAAOpB,MAAM,GACRqB,MAAM,KAAKf,QAAO,SAACC,EAAwBe,GACzD,MAASA,EAAID,MAAM,KAAlBE,EAAC,KAAEC,EAAC,KAEX,OADAjB,EAAIgB,IAAKE,EAAAA,EAAAA,GAA2BD,GAC7BjB,IACN,IAEGmB,EAAQ,GAENC,EAAgCR,EAAM,QAA7BS,EAAuBT,EAAM,UAAlBU,EAAYV,EAAM,QACxC,GAAqDzB,EAAAA,EAAAA,IACzDmB,EAAUiB,QAAQC,gBAEhBlB,EAAUiB,QAAQC,eAClB,GAJIC,EAAAA,EAAAA,IAAKC,OAAU,IAAG,OAAID,EAAEE,EAAAA,EAAAA,IAAKC,OAAU,IAAG,OAAID,EAMtD,GAAIL,EAAS,CACX,IAAMO,EAASC,MAAMC,QAAQnB,EAAOU,SAChCV,EAAOU,QAAQ,GACfV,EAAOU,QAEPI,EAAWM,KAAKH,IAClBvB,EAAU2B,eAAeJ,GAI7B,GAAIT,EAAS,CACX,IAAMc,EAAMJ,MAAMC,QAAQnB,EAAOQ,SAC7BR,EAAOQ,QAAQ,GACfR,EAAOQ,QAEX,GAAIQ,EAAWI,KAAKE,GAAM,CACxB,IAAMC,EAASxC,EAAW,aAAciB,GAExCO,EAAMiB,KAAK9B,EAAU+B,SAASH,EAAKC,KAIvC,GAAId,EAAW,CACb,IAAMiB,EAAQR,MAAMC,QAAQnB,EAAOS,WAC/BT,EAAOS,UAAU,GACjBT,EAAOS,UACLkB,EAAQ5C,EAAW,YAAaiB,GACtCO,EAAMiB,KAAK9B,EAAUkC,MAAMF,EAAOC,IAGpC,OAAOE,QAAQC,IAAIvB","sources":["../node_modules/@segment/analytics-core/src/validation/helpers.ts","../node_modules/@segment/analytics-next/src/core/query-string/pickPrefix.ts","../node_modules/@segment/analytics-next/src/core/query-string/index.ts"],"sourcesContent":["import { CoreSegmentEvent } from '../events'\n\nexport function isString(obj: unknown): obj is string {\n  return typeof obj === 'string'\n}\n\nexport function isNumber(obj: unknown): obj is number {\n  return typeof obj === 'number'\n}\n\nexport function isFunction(obj: unknown): obj is Function {\n  return typeof obj === 'function'\n}\n\nexport function isPlainObject(\n  obj: unknown\n): obj is Record<string | symbol | number, any> {\n  return (\n    Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === 'object'\n  )\n}\n\nexport function hasUser(event: CoreSegmentEvent): boolean {\n  const id =\n    event.userId ?? event.anonymousId ?? event.groupId ?? event.previousId\n  return isString(id)\n}\n","import { QueryStringParams } from '.'\n\n/**\n * Returns an object containing only the properties prefixed by the input\n * string.\n * Ex: prefix('ajs_traits_', { ajs_traits_address: '123 St' })\n * will return { address: '123 St' }\n **/\nexport function pickPrefix(\n  prefix: string,\n  object: QueryStringParams\n): QueryStringParams {\n  return Object.keys(object).reduce((acc: QueryStringParams, key: string) => {\n    if (key.startsWith(prefix)) {\n      const field = key.substr(prefix.length)\n      acc[field] = object[key]!\n    }\n    return acc\n  }, {})\n}\n","import { pickPrefix } from './pickPrefix'\nimport { gracefulDecodeURIComponent } from './gracefulDecodeURIComponent'\nimport { Analytics } from '../analytics'\nimport { Context } from '../context'\nimport { isPlainObject } from '@segment/analytics-core'\n\nexport interface QueryStringParams {\n  [key: string]: string | null\n}\n\nexport function queryString(\n  analytics: Analytics,\n  query: string\n): Promise<Context[]> {\n  const a = document.createElement('a')\n  a.href = query\n  const parsed = a.search.slice(1)\n  const params = parsed.split('&').reduce((acc: QueryStringParams, str) => {\n    const [k, v] = str.split('=')\n    acc[k] = gracefulDecodeURIComponent(v)\n    return acc\n  }, {})\n\n  const calls = []\n\n  const { ajs_uid, ajs_event, ajs_aid } = params\n  const { aid: aidPattern = /.+/, uid: uidPattern = /.+/ } = isPlainObject(\n    analytics.options.useQueryString\n  )\n    ? analytics.options.useQueryString\n    : {}\n\n  if (ajs_aid) {\n    const anonId = Array.isArray(params.ajs_aid)\n      ? params.ajs_aid[0]\n      : params.ajs_aid\n\n    if (aidPattern.test(anonId)) {\n      analytics.setAnonymousId(anonId)\n    }\n  }\n\n  if (ajs_uid) {\n    const uid = Array.isArray(params.ajs_uid)\n      ? params.ajs_uid[0]\n      : params.ajs_uid\n\n    if (uidPattern.test(uid)) {\n      const traits = pickPrefix('ajs_trait_', params)\n\n      calls.push(analytics.identify(uid, traits))\n    }\n  }\n\n  if (ajs_event) {\n    const event = Array.isArray(params.ajs_event)\n      ? params.ajs_event[0]\n      : params.ajs_event\n    const props = pickPrefix('ajs_prop_', params)\n    calls.push(analytics.track(event, props))\n  }\n\n  return Promise.all(calls)\n}\n"],"names":["isPlainObject","obj","Object","prototype","toString","call","slice","toLowerCase","pickPrefix","prefix","object","keys","reduce","acc","key","startsWith","substr","length","queryString","analytics","query","a","document","createElement","href","params","search","split","str","k","v","gracefulDecodeURIComponent","calls","ajs_uid","ajs_event","ajs_aid","options","useQueryString","_b","aidPattern","_c","uidPattern","anonId","Array","isArray","test","setAnonymousId","uid","traits","push","identify","event_1","props","track","Promise","all"],"sourceRoot":""}